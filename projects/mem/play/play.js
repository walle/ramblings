(function(exports,global){function Preferences(){this.playerName=localStorage["mem.player.name"],this.selectedLanguage=localStorage["mem.selected.language"]||"en"}function t(key){return translations[preferences.selectedLanguage][key]?translations[preferences.selectedLanguage][key]:"Translation missing for {"+key+"}"}function Observerable(){}function Deck(){var cards=[];CARD_IMAGES.forEach(function(image){cards.push(new Card(0,0,image)),cards.push(new Card(0,0,image))}),this.cards=cards}function Player(name){this.name=name,this.clicks=0,this.pairs=0,this.seconds=0}function Board(){this.width=4,this.height=6,this.flippedCards=[],this.deck=new Deck,this.cards=Array(this.height);for(var row=0;this.height>row;row++)this.cards[row]=Array(this.width)}function Card(x,y,image){this.x=x,this.y=y,this.image=image,this.flipped=!1,this.id="card-"+this.y+"-"+this.x}function BoardView(controller){this.controller=controller,this.board=controller.board,this.player=controller.player,this.canvas=document.getElementById("board");var handleInteraction=function(event){event.preventDefault();var target=event.target;target=target.parentElement,target.hasAttribute("data-x")&&target.hasAttribute("data-y")&&controller.handleInteraction(target.attributes["data-x"].value,target.attributes["data-y"].value)};this.canvas.touchstart?this.canvas.addEventListener("touchstart",handleInteraction):this.canvas.addEventListener("click",handleInteraction),this.board.addObserver("prepared",function(){this.renderInitial()},this),this.board.addObserver("flip",function(e,card){var cardElement=document.getElementById(card.id);cardElement.classList.toggle("flipped"),this.player.clicks++},this),this.board.addObserver("match",function(){if(this.player.pairs++,this.player.pairs===this.board.numberOfPairs()){var gameOver='<div id="game-over"><h1>'+t("you_win")+"</h1>"+'<ul class="options">'+'<li><a id="restart-button" href="#restart">'+t("restart")+"</a></li>"+'<li><a id="quit-button" href="#quit">'+t("quit")+"</a></li>"+"</ul>"+"</div>";this.canvas.innerHTML=gameOver;var restartButton=document.getElementById("restart-button");restartButton.touchstart?restartButton.addEventListener("touchstart",this.controller.restart):restartButton.addEventListener("click",this.controller.restart);var quitButton=document.getElementById("quit-button");quitButton.touchstart?quitButton.addEventListener("touchstart",function(){window.location="index.html"}):quitButton.addEventListener("click",function(){window.location="index.html"})}},this),this.board.addObserver("flipBack",function(e,cards){setTimeout(function(){cards.forEach(function(card){var cardElement=document.getElementById(card.id);cardElement.classList.toggle("flipped")})},1e3)},this)}function PlayerView(controller){this.controller=controller,this.player=this.controller.player,this.canvas=document.getElementById("player"),this.render();var view=this;this.tick=setInterval(function(){view.player.seconds++,view.render()},1e3),this.controller.board.addObserver("flip",function(){this.render()},this),this.controller.board.addObserver("match",function(){this.render(),this.player.pairs===this.controller.board.numberOfPairs()&&clearInterval(this.tick)},this)}function GameController(board,player){this.board=board,this.player=player}function setHight(){document.getElementById("game").style.height=window.innerHeight+"px"}global["true"]=exports,Array.prototype.shuffle=function(){for(var j,x,i=this.length;i;j=parseInt(Math.random()*i),x=this[--i],this[i]=this[j],this[j]=x);return this},Preferences.prototype.save=function(){localStorage["mem.player.name"]=this.playerName,localStorage["mem.selected.language"]=this.selectedLanguage};var preferences=new Preferences,translations={en:{play:"Play",options:"Options",language:"Language",save:"Save",your_name:"Your name",you_win:"You win",restart:"Restart",quit:"Quit",clicks:"Clicks",pairs:"Pairs",time:"Time",hour:"hour",hours:"hours",minute:"minute",minutes:"minutes",second:"second",seconds:"seconds"},sv:{play:"Spela",options:"Alternativ",language:"SprÃ¥k",save:"Spara",your_name:"Ditt namn",you_win:"Du vinner",restart:"Starta om",quit:"Avsluta",clicks:"Klick",pairs:"Par",time:"Tid",hour:"timma",hours:"timmar",minute:"minut",minutes:"minuter",second:"sekund",seconds:"sekunder"}};Observerable.prototype.addObserver=function(event,observer,context){this.observers=this.observers||[],this.observers.push({event:event,block:observer,context:context||null})},Observerable.prototype.notifyObservers=function(event){for(var i=0;(this.observers||[]).length>i;i++){var observer=this.observers[i];observer.event===event&&observer.block.apply(observer.context,arguments)}},Observerable.mixin=function(target){Object.keys(Observerable.prototype).forEach(function(property){target[property]=Observerable.prototype[property]})};var CARD_IMAGES=["cat","hummingbird","moose","rabbit","rooster","tarantula","eagle","kiwi","orange","raven","rose","toy-car"];Deck.prototype.getShuffledCards=function(){return this.cards.shuffle()},Player.prototype.humanTime=function(){var hours=Math.floor(this.seconds/3600),minutes=Math.floor((this.seconds-3600*hours)/60),seconds=this.seconds-3600*hours-60*minutes,time="";return hours>=1&&(time+=hours+" "+(hours>1?t("hours"):t("hour"))+" "),minutes>=1&&(time+=minutes+" "+(minutes>1?t("minutes"):t("minute"))+" "),time+=seconds+" "+(1===seconds?t("second"):t("seconds"))+" "},Player.prototype.reset=function(){this.clicks=0,this.pairs=0,this.seconds=0},Board.prototype.prepare=function(){for(var cards=this.deck.getShuffledCards(),row=0;this.height>row;row++)for(var column=0;this.width>column;column++)card=cards[row*this.width+column],this.cards[row][column]=new Card(column,row,card.image);this.notifyObservers("prepared")},Board.prototype.flipCard=function(x,y){var card=this.cards[y][x];2>this.flippedCards.length&&card.flipped===!1&&(card.flipped=!0,this.notifyObservers("flip",card),this.flippedCards.push(card),2===this.flippedCards.length&&(this.flippedCards[0].image===this.flippedCards[1].image?this.notifyObservers("match"):(this.flippedCards.forEach(function(card){card.flipped=!1}),this.notifyObservers("flipBack",this.flippedCards)),this.flippedCards=[]))},Board.prototype.numberOfPairs=function(){return this.width*this.height/2},Observerable.mixin(Board.prototype),Card.prototype.render=function(){return'<div id="'+this.id+'" class="card" data-x="'+this.x+'" data-y="'+this.y+'">'+'<div class="back"></div>'+'<div class="front" style="background-image: url(./images/'+this.image+'.jpg);">'+"</div>"+"</div>"},BoardView.prototype.renderInitial=function(){for(var html="",row=0;this.board.height>row;row++)for(var column=0;this.board.width>column;column++){var card=this.board.cards[row][column];html+=card.render()}this.canvas.innerHTML=html},PlayerView.prototype.render=function(){this.canvas.innerHTML="<h2>"+this.player.name+"</h2><p>"+t("clicks")+": "+this.player.clicks+"</p><p>"+t("pairs")+": "+this.player.pairs+"</p><p>"+t("time")+": "+this.player.humanTime()+"</p>"},GameController.prototype.handleInteraction=function(x,y){this.board.flipCard(x,y)},GameController.prototype.start=function(){this.board.prepare()},GameController.prototype.restart=function(){board=new Board,player=new Player(preferences.playerName),gameController=new GameController(board,player),boardView=new BoardView(gameController),playerView=new PlayerView(gameController),gameController.start()},document.addEventListener("touchmove",function(event){event.preventDefault()}),setHight(),window.onresize=setHight;var board=new Board,player=new Player(preferences.playerName),gameController=new GameController(board,player),boardView=new BoardView(gameController),playerView=new PlayerView(gameController);gameController.start()})({},function(){return this}());